{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onMouseClick","value","Board","state","squares","Array","fill","xIsNext","i","this","handleMouseClick","squaresArray","slice","calculateWinner","setState","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","console","log","ReactDOM","render","document","getElementById"],"mappings":"2PAIA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAMG,cACvCH,EAAMI,O,IAKPC,E,kDACJ,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAJM,E,yDAQNC,GAAI,IAAD,OACd,OACE,kBAACZ,EAAD,CACEK,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,aAAc,kBAAM,EAAKU,iBAAiBF,Q,uCAK/BA,GACf,IAAMG,EAAeF,KAAKN,MAAMC,QAAQQ,QACpCC,EAAgBF,IAAiBA,EAAaH,KAGlDG,EAAaH,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IAC7CE,KAAKK,SAAS,CACZV,QAASO,EACTJ,SAAUE,KAAKN,MAAMI,a,+BAKvB,IACIQ,EADEC,EAASH,EAAgBJ,KAAKN,MAAMC,SAQ1C,OALEW,EADEC,EACO,WAAaA,EAEb,iBAAmBP,KAAKN,MAAMI,QAAU,IAAM,KAIvD,6BACE,2CACA,yBAAKT,UAAU,UAAUiB,GACzB,yBAAKjB,UAAU,aACZW,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAErB,yBAAKnB,UAAU,aACZW,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,IAErB,yBAAKnB,UAAU,aACZW,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,GAClBR,KAAKQ,aAAa,S,GAxDTC,IAAMC,WA+DpBC,E,uKAEF,OACE,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACI,EAAD,OAEF,yBAAKJ,UAAU,aACb,8BACA,mC,GATSoB,IAAMC,WAuBzB,SAASN,EAAgBT,GAYvB,IAXA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAGrC,GADAC,QAAQC,IAAIvB,EAAQmB,GAAInB,EAAQoB,GAAIpB,EAAQqB,IACxCrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAxBTK,IAASC,OACP,kBAACT,EAAD,MACAU,SAASC,eAAe,W","file":"static/js/main.423d0c3f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onMouseClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onMouseClick={() => this.handleMouseClick(i)}\n      />\n    );\n  }\n\n  handleMouseClick(i) {\n    const squaresArray = this.state.squares.slice();\n    if (calculateWinner(squaresArray) || squaresArray[i]) {\n      return;\n    }\n    squaresArray[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squaresArray,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <h1>Tic Tac Toe</h1>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    console.log(squares[a], squares[b], squares[c]);\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}